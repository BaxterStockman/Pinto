#!/usr/bin/env perl

use strict;
use warnings;

use Pinto;
use Pinto::Initializer;

use File::Temp;
use List::Util qw(sum);
use Getopt::Long::Descriptive;

#-----------------------------------------------------------------------------

my @ops = qw(pin unpin pop reindex);

my ($opt, $usage) = describe_options(
	"$0 %o TARGETS",
    [ 'root|r=s',         "Root of repository",                        ],
    [ 'ops|o=s@',         "Operations to perform",                     ],
    [ 'iterations|i=i',   "Number of iterations",  { default => 100  } ],
);

my @targets = @ARGV ? @ARGV : qw(THALJEF/Pinto-0.065.tar.gz);
my %ops     = map { lc $_ => 1 } $opt->ops ? @{$opt->ops} : @ops; 
my $root    = $opt->root || File::Temp->newdir;
my $iters   = $opt->iterations;

#-----------------------------------------------------------------------------

Pinto::Initializer->new(root => "$root")->init(stack => 'master') unless -e $root;

#-----------------------------------------------------------------------------

my $pinto = Pinto->new(root => "$root");
$pinto->run(Pull => (targets => \@targets, message => 'pulled'));

#-----------------------------------------------------------------------------

my @runs;
for my $i (1..$iters) {
	print "Iteration $i: ";
	DB::enable_profile() if $i == $iters && defined $Devel::NYTProf::VERSION;

	my $start = time;
	$pinto->run(Pin     => (targets => \@targets, message => 'pin'))     if $ops{pin};
	$pinto->run(Unpin   => (targets => \@targets, message => 'unpin'))   if $ops{unpin};
	$pinto->run(Pop     => (targets => \@targets, message => 'pop'))     if $ops{pop};
	$pinto->run(Reindex => (targets => \@targets, message => 'reindex')) if $ops{reindex};
	my $elapsed = time - $start;

	print "$elapsed seconds\n";
	push @runs, $elapsed;
}

my $average = sum( @runs ) / scalar @runs;
print "Average: $average seconds\n";